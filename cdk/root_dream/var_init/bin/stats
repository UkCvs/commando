#!/bin/sh
# AL (for LraiZers C16 public dev) updated Sat 05 Nov 2016

epgs="/tmp/epgstats.dat"
lock="/tmp/getepg.lock"
udat="/tmp/udat"
map="/var/etc/channels.cfg"
tmap="/tmp/channels.cfg"
conf="/var/tuxbox/config/neutrino.conf"
epgcache=`grep -m1 "^epg_dir=" $conf|cut -d "=" -f2`
mntoff=`grep -m1 "_onoff=" $conf|cut -d "=" -f2`

clip(){
[ -e $lock ] && echo $epgcache >/tmp/clip3
}

if [ "$epgcache" = "" ] || [ "$mntoff" = "true" ]; then
	ecache="None (or disabled)"
else
	if [ `ls -l $epgcache|wc -l` -eq 0 ];then
		touch $epgcache/0.xml
		if [ -e $epgcache/0.xml ]; then
			clip
			ecache="$epgcache (Empty but writeable)"
		else 
			ecache="$epgcache (Unmounted!)"
		fi
	else
		clip
		ecache="$epgcache (R/W access!)"
	fi
fi

grep "^1;" $map >$tmap
awk '!x[$0]++' $tmap >$udat
mv $udat $tmap
count=`grep "^1;" -c $tmap`
rm $tmap

sectionsdcontrol --statistics >$epgs
mem1=`grep "malloc:" $epgs|cut -d " " -f6|sed 's/(//;s/kb)//'`
mem2=`echo "$mem1 1024"|awk '{printf("%.2f",$1 / $2)}'`"MB"
mem3=`grep "bytes:" $epgs|cut -d " " -f4|sed 's/(//;s/kb)//'`
mem4=`echo "$mem3 1024"|awk '{printf("%.2f",$1 / $2)}'`"MB"
days=`grep "pg_c" $conf|cut -d "=" -f2`
summ=`grep "pg_e" $conf|cut -d "=" -f2`

sed -i "
s/statistics:/GetEPG status on: `date +"%a %d %b %Y %T"`/
/cpp/c\$Id: sectionsdcontrol v1.10 29/8/2012 rhabarber1848
3iC16 28.2E GetEPG mods by LraiZer@ukcvs.net Sep 2016
s/is disabled/EPG is disabled (wise choice!)/
s/is enabled/EPG is enabled (dumb choice...)/
/Current/d
5iEpg Cache Mount: $ecache
5iNumber of channels mapped for GetEPG: $count
s/Hours to cache:.*$/Days (max) to cache events for: $days/
s/ extended text.*$/ more info: $summ/
s/ts to cache:/ts to cache (max):/
s/are old/expire/
s/after their end time/after ending/ 
/ces:/d
/d-e/d
/a-s/d
/size/d
/handed out/cRAM now used by GetEPG: $mem2
/sbrk/d
/in bytes:/cRAM when GetEPG loaded: $mem4
" $epgs

free=`sed -n "/Free/"p $epgs`
sed -i '/^Free/d' $epgs
echo $free >>$epgs

if [ ! -e /tmp/osd ] && [ ! -e $lock ]; then
	stat=`cat $epgs`
	echo "$stat"
	rm $epgs
fi
if [ -e /tmp/osd ]; then
	{ sleep 300; mv $epgs /var/log; rm /tmp/osd; } &
fi
if [ -e $lock ]; then
	clip1=`grep " events:" $epgs|cut -d " " -f5`
	echo $clip1 >/tmp/clip1
	echo $mem2 >/tmp/clip2
	{ sleep 20; rm /tmp/clip*; } &
fi

exit 0
